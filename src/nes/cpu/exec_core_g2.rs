//! 命令実行のコア処理 (Group 2)

use super::{Cpu, Flags};

/*
Group 2 の全命令は以下の通り:
BIT JMP JMP STY LDY CPY CPX
*/

impl Cpu {

    //////////////////////////////////////////////
    /// BPL (group 2):
    /// Negative が 0 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bpl_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::NEGATIVE.bits) == 0) as u8
    }

    //////////////////////////////////////////////
    /// BMI (group 2):
    /// Negative が 1 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bmi_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::NEGATIVE.bits) != 0) as u8
    }

    //////////////////////////////////////////////
    /// BVC (group 2):
    /// Overflow が 0 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bvc_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::OVERFLOW.bits) == 0) as u8
    }

    //////////////////////////////////////////////
    /// BVS (group 2):
    /// Overflow が 1 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bvs_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::OVERFLOW.bits) != 0) as u8
    }

    //////////////////////////////////////////////
    /// BCC (group 2):
    /// Carry が 0 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bcc_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::CARRY.bits) == 0) as u8
    }

    //////////////////////////////////////////////
    /// BCS (group 2):
    /// Carry が 0 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bcs_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::CARRY.bits) != 0) as u8
    }

    //////////////////////////////////////////////
    /// BNE (group 2):
    /// Zero が 0 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn bne_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::ZERO.bits) == 0) as u8
    }

    //////////////////////////////////////////////
    /// BEQ (group 2):
    /// Zero が 1 なら指定のアドレスへ分岐。
    //////////////////////////////////////////////
    //  N Z C I D V
    //  - - - - - -
    //////////////////////////////////////////////
    pub fn beq_action(&mut self, _: u8) -> u8 {
        ((self.regs.p & Flags::ZERO.bits) != 0) as u8
    }
}